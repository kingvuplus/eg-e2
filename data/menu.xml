<!--suppress XmlUnboundNsPrefix -->
<menu text="Mainmenu" title="Main menu">
	<id val="mainmenu" />
		<item weight="0" level="1" text="EGAMI Panel" entryID="egami_selection">
<code>
from EGAMI.EGAMI_main import EgamiMainPanel
self.session.open(EgamiMainPanel)
</code>  
		</item>	
		<item weight="2" level="1" text="Plugins" entryID="plugin_selection">
<code>
from EGAMI.EGAMI_Green import EGGreenPanel
self.session.open(EGGreenPanel)
</code>  
		</item>
		<menu weight="3" level="0" text="Timers" entryID="timer_menu">
			<id val="timermenu" />
			<item weight="100" level="0" text="CronTimers" entryID="crontimer_edit"><screen module="CronTimer" screen="CronTimers" /></item>
			<item weight="100" level="0" text="Timers" entryID="timer_edit"><screen module="TimerEdit" screen="TimerEditList" /></item>
			<item weight="100" level="0" text="PowerTimers" entryID="powertimer_edit"><screen module="PowerTimerEdit" screen="PowerTimerEditList" /></item>
		</menu>
		<menu weight="4" level="0" text="Setup" flushConfigOnClose="1" entryID="setup_selection" >
			<id val="setup" />
			<menu weight="5" level="0" text="TV" entryID="tv_selection">
				<id val="tv" />
				<menu weight="10" level="0" text="Service searching" entryID="service_searching_selection">
					<id val="scan" />
					<item weight="10" text="Tuner configuration" entryID="tuner_setup"><screen module="Satconfig" screen="NimSelection" /></item>
					<item weight="20" text="Automatic scan" entryID="auto_scan"><screen module="ScanSetup" screen="ScanSimple" /></item>
					<item weight="30" text="Manual scan" entryID="manual_scan"><screen module="ScanSetup" /></item>
				</menu>
				<menu weight="11" level="0" text="A/V settings" entryID="av_setup">
					<id val="av" />
					<item weight="11" text="A/V settings" entryID="av_setup"><screen module="VideoMode" screen="VideoSetup" /></item>
					<item level="2" text="3D setup" entryID="osd3dsetup" requires="CanChange3DOsd"><screen module="UserInterfacePositioner" screen="OSD3DSetupScreen"/></item>
					<item level="2" text="OSD position setup" entryID="osdsetup" requires="OsdSetup"><screen module="UserInterfacePositioner" screen="UserInterfacePositioner"/></item>
				</menu>
				<item weight="12" level="0" text="Timeshift settings" entryID="timshift_setup"><screen module="Timeshift" screen="TimeshiftSettings" /></item>
				<item weight="13" level="0" text="Recording and playback settings" entryID="recording_setup"><screen module="Recordings" screen="RecordingSettings" /></item>
				<menu weight="14" level="2" text="EPG settings" entryID="epg_menu">
					<id val="epg" />
					<item level="0" entryID="epg_setup"><setup id="epgsettings" /></item>
					<menu level="2" text="Load/Save" entryID="epgloadsave_menu">
						<id val="epgloadsave_menu" />
						<item level="0" entryID="saveepgcache" text="Save EPG">
<code>
from Components.EpgLoadSave import EpgSaveMsg
def msgClosed(ret):
	if ret:
		from enigma import eEPGCache
		epgcache = eEPGCache.getInstance()
		epgcache.save()
self.session.openWithCallback(msgClosed, EpgSaveMsg)
</code>
						</item>
						<item level="0" entryID="loadepgcache" text="Load EPG">
<code>
from Components.EpgLoadSave import EpgLoadMsg
def msgClosed(ret):
	if ret:
		from enigma import eEPGCache
		epgcache = eEPGCache.getInstance()
		epgcache.load()
self.session.openWithCallback(msgClosed, EpgLoadMsg)
</code>
						</item>
						<item level="0" entryID="deleteepgcache" text="Delete EPG">
<code>
from Components.EpgLoadSave import EpgDeleteMsg
def msgClosed(ret):
	if ret:
		import os
		from Components.config import config
		if os.path.exists(config.misc.epgcache_filename.value):
			os.remove(config.misc.epgcache_filename.value)
		from enigma import eEPGCache
		epgcache = eEPGCache.getInstance()
		epgcache.flushEPG()
self.session.openWithCallback(msgClosed, EpgDeleteMsg)
</code>
						</item>
					</menu>
					<item level="2" entryID="setup_epgmulti"><setup id="epgmulti" /></item>
					<item level="2" entryID="setup_epgenhanced"><setup id="epgenhanced" /></item>
					<item level="2" entryID="setup_epggraphical"><setup id="epggraphical" /></item>
				</menu>
				<menu weight="14" text="Common interface" entryID="cam_setup" requires="CommonInterface">
					<id val="cam" />
					<item weight="10" level="1" text="Common interface" entryID="ci_setup" requires="CommonInterface"><screen module="Ci" screen="CiSelection" /></item>
					<!--<item weight="11" level="1" text="Common interface PIN Setup" entryID="ci_pin_setup" requires="CommonInterface"><screen module="Ci" screen="CiDefaultPinSetup" /></item>-->
					<item weight="12" level="1" text="CI+ Helper Setup" entryID="ci_setup" requires="CIHelper"><screen module="Ci" screen="CIHelper" /></item>
					<!--<item weight="13" level="2" text="CCcam info" entryID="cccaminfo" requires="CCcamInstalled"><screen module="CCcamInfo" screen="CCcamInfoMain" /></item>
					<item weight="14" level="2" text="OScam info" entryID="oscaminfo" requires="OScamInstalled"><screen module="OScamInfo" screen="OscamInfoMenu" /></item>-->
				</menu>
				<item weight="15" level="1" entryID="autolanguage_setup"><setup id="autolanguagesetup" /></item>
				<item weight="15" level="0" entryID="channelselection_setup"><setup id="channelselection" /></item>
			</menu>
			<menu weight="5" level="0" text="System" entryID="system_selection">
				<id val="system" />
				<!--<item level="1" text="VCR scart" entryID="scart_switch" configcondition="config.usage.show_vcr_scart" requires="ScartSwitch"><code>self.session.scart.VCRSbChanged(3)</code></item>-->
				<menu weight="3" level="2" text="User interface" entryID="osd_setup" requires="OsdMenu">
					<id val="osd_menu" />
					<item level="0" entryID="usage_setup"><setup id="usage" /></item>
					<item level="0" entryID="user_interface"><setup id="userinterface" /></item>
					<item level="0" text="Skin setup" entryID="skin_setup"><screen module="SkinSelector" screen="SkinSelector"/></item>
					<menu weight="5" level="0" text="Front Display Panel" entryID="display_selection" requires="Display">
						<id val="display" />
						<item level="0" entryID="display_setup"><setup id="display" /></item>
						<item level="0" text="Skin setup" entryID="lcd_skin_setup"><screen module="SkinSelector" screen="LcdSkinSelector"/></item>
					</menu>  
					<menu level="0" text="LED Display Panel" entryID="leddisplay_selection" requires="DisplayLED">
						<id val="leddisplay"/>
					</menu>
				</menu>
				<item weight="4" level="0" text="Language" entryID="language_setup"><screen module="LanguageSelection" /></item>
				<menu weight="5" level="0" text="Network" entryID="network_menu">
					<id val="network" />
					<item level="0" text="Device Setup" entryID="device_setup"><screen module="NetworkSetup" screen="NetworkAdapterSelection"/></item>
					<item level="1" text="Mounts Setup" entryID="netmounts_setup"><screen module="NetworkSetup" screen="NetworkMountsMenu"/></item>
					<item level="2" text="AFP Setup" entryID="netafp_setup"><screen module="NetworkSetup" screen="NetworkAfp"/></item>
					<item level="2" text="FTP Setup" entryID="netftp_setup"><screen module="NetworkSetup" screen="NetworkFtp"/></item>
					<item level="2" text="Inadyn Setup" entryID="Inadyn_setup"><screen module="NetworkSetup" screen="NetworkInadyn"/></item>
					<item level="2" text="MiniDLNA Setup" entryID="minidlna_setup"><screen module="NetworkSetup" screen="NetworkMiniDLNA"/></item>
					<item level="2" text="NFS Setup" entryID="netnfs_setup"><screen module="NetworkSetup" screen="NetworkNfs"/></item>
					<item level="2" text="OpenVPN Setup" entryID="netvpn_setup"><screen module="NetworkSetup" screen="NetworkOpenvpn"/></item>
					<item level="2" text="SABnzbd Setup" entryID="netsabnzbd_setup"><screen module="NetworkSetup" screen="NetworkSABnzbd"/></item>
					<item level="2" text="Samba / CIFS Setup" entryID="netsmba_setup"><screen module="NetworkSetup" screen="NetworkSamba"/></item>
					<item level="2" text="Telnet Setup" entryID="nettelnet_setup"><screen module="NetworkSetup" screen="NetworkTelnet"/></item>
					<item level="2" text="uShare Setup" entryID="netushare_setup"><screen module="NetworkSetup" screen="NetworkuShare"/></item>
					<!--<item level="2" text="Remote Tuner Server Setup" entryID="netrts_setup"><screen module="NetworkSetup" screen="RemoteTunerServer"/></item>-->
				</menu>
				<!--<item level="1" entryID="onlineupdate_setup"><setup id="softwareupdate"/></item>-->
				<item weight="6" level="0" entryID="time_setup"><setup id="time"/></item>
				<item weight="7" level="2" entryID="subtitle_setup"><setup id="subtitlesetup" /></item>
				<item weight="8" level="0" text="HDMI CEC" entryID="hdmicec" requires="HDMICEC">
<code>
from Plugins.SystemPlugins.HdmiCEC.plugin import HdmiCECSetupScreen
self.session.open(HdmiCECSetupScreen)
</code>
</item>
				<item weight="19" level="0" text="Quick button setup" entryID="hotkey_setup"><screen module="ButtonSetup" screen="ButtonSetup" /></item>
				<item weight="21" level="1" entryID="rfmod_setup" requires="RfModulator"><setup id="RFmod"/></item>
				<item weight="20" level="0" entryID="keyboard_setup"><setup id="keyboard"/></item>
				<item weight="21" level="1" text="Input devices" entryID="input_device_setup"><screen module="InputDeviceSetup" screen="InputDeviceSelection" /></item>
				<item weight="22" level="0" entryID="dvdplayer_setup"><setup id="dvdplayer" /></item>
			</menu>
			<menu weight="15" level="0" text="Storage devices" entryID="hardisk_selection" requires="Harddisk">
				<id val="harddisk" />
				<item weight="1" level="1" entryID="harddisk_setup"><setup id="harddisk"/></item>
				<item weight="2" level="0" text="Initialization" entryID="harddisk_init"><screen module="HarddiskSetup" screen="HarddiskSelection"/></item>
				<item weight="3" level="0" text="USB Disk Format" entryID="usbdisk_init">
<code>
from EGAMI.EGAMI_devices_menu import EGAMI_UsbFormat
self.session.open(EGAMI_UsbFormat)
</code>  
				</item>
				<item weight="4" level="0" text="Filesystem check" entryID="harddisk_check"><screen module="HarddiskSetup" screen="HarddiskFsckSelection"/></item>
				<!--<item level="0" text="Convert ext3 filesystem to ext4" entryID="harddisk_convert" requires="ext4"><screen module="HarddiskSetup" screen="HarddiskConvertExt4Selection"/></item>-->
			</menu>
			<item weight="15" level="0" text="Parental control" entryID="parental_setup"><screen module="ParentalControlSetup" screen="ParentalControlSetup" /></item>
			<!--item level="0" text="Startwizard" entryID="startwizzard"><screen module="StartWizard" screen="StartWizard" /></item-->
			<item weight="15" level="0" text="Factory reset" entryID="factory_reset">
<code>
from Screens.FactoryReset import FactoryReset
def msgClosed(ret):
	if ret:
		from os import system, path, _exit
		print"[FACTORY RESET] remove dir /etc/enigma2"
		system("rm -R /etc/enigma2")
		print"[FACTORY RESET] set network to DHCP"
		system("cp -f /usr/share/enigma2/defaults/interfaces /etc/network/interfaces")
		system("/etc/init.d/networking restart")
		_exit(0)
self.session.openWithCallback(msgClosed, FactoryReset)
</code>
			</item>
			<!--<item weight="15" level="0" text="Software update" entryID="software_update"><screen module="SoftwareUpdate" screen="UpdatePlugin" /></item>-->
		</menu>
		<menu weight="5" level="0" text="Information" entryID="info_screen">
			<id val="information" />
			<item level="0" text="About" entryID="about_screen"><screen module="About" screen="About"/></item>
			<item level="0" text="Devices" entryID="device_screen"><screen module="About" screen="Devices"/></item>
			<item level="0" text="Memory" entryID="memory_screen"><screen module="About" screen="SystemMemoryInfo"/></item>
			<item level="0" text="Network" entryID="network_screen"><screen module="About" screen="SystemNetworkInfo"/></item>
			<item level="1" text="Service" entryID="service_info_screen"><screen module="ServiceInfo" screen="ServiceInfo"/></item>
			<item level="2" text="Streaming clients info" entryID="streaming_clients_info_screen"><screen module="StreamingClientInfo" screen="StreamingClientsInfo"/></item>
		</menu>
		<menu weight="7" text="Standby / Restart" entryID="standby_restart_list" endtext=">">
			<id val="shutdown" />
			<item weight="0" level="0" text="Deep Standby" requires="DeepstandbySupport" entryID="deep_standby">
			<code>
from Screens.Standby import TryQuitMainloop
from Screens.MessageBox import MessageBox
recordings = self.session.nav.getRecordingsCheckBeforeActivateDeepStandby()
if recordings:
	self.session.openWithCallback(self.gotoStandby,MessageBox,_("Recording(s) are in progress or coming up in few seconds!\nEntering standby, after recording the box will shutdown."), type = MessageBox.TYPE_INFO, close_on_any_key = True, timeout = 10)
else:
	self.session.open(TryQuitMainloop, 1)
</code>
			</item>
			<item weight="5" level="0" text="Shutdown" requires="!DeepstandbySupport" entryID="deep_standby"><screen module="Standby" screen="TryQuitMainloop">1</screen></item>
			<item weight="10" level="0" text="WOL Standby" requires="GBWOL" entryID="deep_standby">
			<code>
from Screens.Standby import TryQuitMainloop
from Screens.MessageBox import MessageBox
recordings = self.session.nav.getRecordingsCheckBeforeActivateDeepStandby()
if recordings:
	self.session.openWithCallback(self.gotoStandby,MessageBox,_("Recording(s) are in progress or coming up in few seconds!\nEntering standby, after recording the box will shutdown."), type = MessageBox.TYPE_INFO, close_on_any_key = True, timeout = 10)
else:
	self.session.open(TryQuitMainloop, 45)
</code>
			</item>
			<item weight="15" level="0" text="Standby" entryID="standby"><screen module="Standby" screen="Standby"/></item>
			<item weight="20" level="0" text="Sleep Timer" requires="DeepstandbySupport" entryID="sleep"><screen module="SleepTimerEdit" screen="SleepTimerEdit" /></item>
			<item weight="25" level="0" text="Restart" entryID="restart"><screen module="Standby" screen="TryQuitMainloop">2</screen></item>
			<item weight="30" level="0" text="Restart GUI" entryID="restart_enigma"><screen module="Standby" screen="TryQuitMainloop">3</screen></item>
		</menu>
</menu>
