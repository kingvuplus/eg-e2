# Embedded file name: /usr/lib/enigma2/python/Tools/ASCIItranslit.py
ASCIItranslit = {34: "''",
 42: '_',
 47: '_',
 58: '_',
 60: '_',
 61: '_',
 62: '_',
 63: '_',
 92: '_',
 124: '_',
 127: '',
 160: '_',
 161: '!',
 162: 'c',
 163: 'lb',
 164: '',
 165: 'yen',
 166: 'I',
 167: 'SS',
 168: "'",
 169: '(c)',
 170: 'a',
 171: '<<',
 172: 'not',
 173: '-',
 174: '(R)',
 175: '',
 176: '^0',
 177: '+-',
 178: '^2',
 179: '^3',
 180: "'",
 181: 'u',
 182: 'P',
 183: '.',
 184: ',',
 185: '^1',
 186: 'o',
 187: '>>',
 188: '1_4 ',
 189: '1_2 ',
 190: '3_4 ',
 191: '_',
 192: '`A',
 193: "'A",
 194: '^A',
 195: '~A',
 196: 'Ae',
 197: 'A',
 198: 'AE',
 199: 'C',
 200: '`E',
 201: "'E",
 202: '^E',
 203: 'E',
 204: '`I',
 205: "'I",
 206: '^I',
 207: 'I',
 208: 'D',
 209: '~N',
 210: '`O',
 211: "'O",
 212: '^O',
 213: '~O',
 214: 'Oe',
 215: 'x',
 216: 'O',
 217: '`U',
 218: "'U",
 219: '^U',
 220: 'Ue',
 221: "'Y",
 222: 'Th',
 223: 'ss',
 224: '`a',
 225: "'a",
 226: '^a',
 227: '~a',
 228: 'AE',
 229: 'a',
 230: 'ae',
 231: 'c',
 232: '`e',
 233: "'e",
 234: '^e',
 235: 'e',
 236: '`i',
 237: "'i",
 238: '^i',
 239: 'i',
 240: 'd',
 241: '~n',
 242: '`o',
 243: "'o",
 244: '^o',
 245: '~o',
 246: 'oe',
 247: '_',
 248: 'o',
 249: '`u',
 250: "'u",
 251: '^u',
 252: 'ue',
 253: "'y",
 254: 'th',
 255: 'Y',
 256: 'A',
 257: 'a',
 258: 'A',
 259: 'a',
 260: 'A',
 261: 'a',
 262: "'C",
 263: "'c",
 264: '^C',
 265: '^c',
 266: 'C',
 267: 'c',
 268: 'C',
 269: 'c',
 270: 'D',
 271: 'd',
 272: 'D',
 273: 'd',
 274: 'E',
 275: 'e',
 276: 'E',
 277: 'e',
 278: 'E',
 279: 'e',
 280: 'E',
 281: 'e',
 282: 'E',
 283: 'e',
 284: '^G',
 285: '^g',
 286: 'G',
 287: 'g',
 288: 'G',
 289: 'g',
 290: 'G',
 291: 'g',
 292: '^H',
 293: '^h',
 294: 'H',
 295: 'h',
 296: '~I',
 297: '~i',
 298: 'I',
 299: 'i',
 300: 'I',
 301: 'i',
 302: 'I',
 303: 'i',
 304: 'I',
 305: 'i',
 306: 'IJ',
 307: 'ij',
 308: '^J',
 309: '^j',
 310: 'K',
 311: 'k',
 312: '',
 313: 'L',
 314: 'l',
 315: 'L',
 316: 'l',
 317: 'L',
 318: 'l',
 319: 'L',
 320: 'l',
 321: 'L',
 322: 'l',
 323: "'N",
 324: "'n",
 325: 'N',
 326: 'n',
 327: 'N',
 328: 'n',
 329: 'n',
 330: '_',
 331: '_',
 332: 'O',
 333: 'o',
 334: 'O',
 335: 'o',
 336: "''o",
 338: 'OE',
 339: 'oe',
 340: "'R",
 341: "'r",
 342: 'R',
 343: 'r',
 344: 'R',
 345: 'r',
 346: "'s",
 347: "'s",
 348: '^S',
 349: '^s',
 350: 'S',
 351: 's',
 352: 'S',
 353: 's',
 354: 'T',
 355: 't',
 356: 'T',
 357: 't',
 358: 'T',
 359: 't',
 360: '~U',
 361: '~u',
 362: 'U',
 363: 'u',
 364: 'U',
 365: 'u',
 366: 'U',
 367: 'u',
 368: "''u",
 370: 'U',
 371: 'u',
 372: '^W',
 373: '^w',
 374: '^Y',
 375: '^y',
 376: 'Y',
 377: "'Z",
 378: "'z",
 379: 'Z',
 380: 'z',
 381: 'Z',
 382: 'z',
 383: 's',
 399: '_',
 402: 'f',
 452: 'DZ',
 453: 'DZ',
 454: 'DZ',
 455: 'LJ',
 456: 'Lj',
 457: 'lj',
 458: 'NJ',
 459: 'Nj',
 460: 'nj',
 497: 'DZ',
 498: 'Dz',
 499: 'dz',
 536: 'S',
 537: 's',
 538: 'T',
 539: 't',
 601: '_',
 8364: 'EUR'}

def legacyEncode(string):
    string2 = ''
    for z, char in enumerate(string.decode('utf-8')):
        i = ord(char)
        if i < 33:
            string2 += '_'
        elif i in ASCIItranslit:
            string2 += ASCIItranslit[i]
        else:
            try:
                string2 += char.encode('ascii', 'strict')
            except:
                string2 += '_'

    return string2.upper()